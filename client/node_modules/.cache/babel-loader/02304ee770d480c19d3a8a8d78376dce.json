{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGand\\\\OneDrive\\\\Documents\\\\Classes\\\\Tutor\\\\Denise\\\\stayorgo\\\\client\\\\src\\\\components\\\\Search\\\\Search.js\";\nimport React, { Component } from 'react';\nimport API from '../../utils/API';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      propertiesList: []\n    };\n\n    this.searchZillowProperties = propertyQuery => {\n      API.searchZillowProperties(propertyQuery).then(res => {\n        console.log(\"Zillow API Call: \", res.data); // take res.data.items array and create new array with less information\n\n        const propertiesList = res.data.map(property => {\n          return {// propertyId: property.id,\n            // authors: property.volumeInfo.authors,\n            // title: property.volumeInfo.title,\n            // date: property.volumeInfo.publishedDate,\n            // description: property.volumeInfo.description,\n            // image: property.volumeInfo.imageLinks ? property.volumeInfo.imageLinks.thumbnail : 'https://fillmurray.com/200/300',\n            // link: property.volumeInfo.infoLink\n          };\n        }); // set state to have new property list\n\n        this.setState({\n          propertiesList\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (!this.state.searchTerm) {\n        return false;\n      }\n\n      this.searchZillowProperties(this.state.searchTerm);\n    };\n\n    this.saveproperty = propertyId => {\n      // find property in this.state.propertiesList based on the propertyId value\n      const propertyPicked = this.state.propertiesList.find(property => property.propertyId === propertyId);\n      console.log(propertyPicked);\n      API.saveproperty(propertyPicked).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid bg-dark text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Search For properties Here\"))), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-sm-6 col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Search For A property\"), React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"searchTerm\",\n      onChange: this.handleInputChange,\n      placeholder: \"Enter property name here\",\n      value: this.state.searchTerm,\n      type: \"input\",\n      className: \"form-control mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-block btn-success\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Search for property.\"))), React.createElement(\"div\", {\n      className: \"col-12 col-sm-6 col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, !this.state.propertiesList.length ? React.createElement(\"h2\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Search For a property\") : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Search Results for: \", this.state.searchTerm), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.propertiesList.map(property => {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-6\",\n        key: property.propertyId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: property.image,\n        alt: property.title,\n        className: \"card-img-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, property.title), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Released: \", property.date), property.authors ? React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"By: \", property.authors.join(', ')) : '', React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Description\"), \": \", property.description, ' '), React.createElement(\"a\", {\n        href: property.link,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"btn btn-success btn-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"See More.\"), React.createElement(\"button\", {\n        onClick: () => this.saveproperty(property.propertyId),\n        className: \"btn btn-dark btn-small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Save property.\"))));\n    })))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\GGand\\OneDrive\\Documents\\Classes\\Tutor\\Denise\\stayorgo\\client\\src\\components\\Search\\Search.js"],"names":["React","Component","API","Search","state","searchTerm","propertiesList","searchZillowProperties","propertyQuery","then","res","console","log","data","map","property","setState","catch","err","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveproperty","propertyId","propertyPicked","find","render","length","image","title","date","authors","join","description","link"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport API from '../../utils/API';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchTerm: '',\r\n    propertiesList: []\r\n  };\r\n\r\n  searchZillowProperties = propertyQuery => {\r\n    API.searchZillowProperties(propertyQuery)\r\n      .then(res => {\r\n          console.log(\"Zillow API Call: \",res.data);\r\n          \r\n        // take res.data.items array and create new array with less information\r\n        const propertiesList = res.data.map(property => {\r\n          return {\r\n\r\n\r\n            // propertyId: property.id,\r\n            // authors: property.volumeInfo.authors,\r\n            // title: property.volumeInfo.title,\r\n            // date: property.volumeInfo.publishedDate,\r\n            // description: property.volumeInfo.description,\r\n            // image: property.volumeInfo.imageLinks ? property.volumeInfo.imageLinks.thumbnail : 'https://fillmurray.com/200/300',\r\n            // link: property.volumeInfo.infoLink\r\n          };\r\n        });\r\n        // set state to have new property list\r\n        this.setState({ propertiesList });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.searchTerm) {\r\n      return false;\r\n    }\r\n\r\n    this.searchZillowProperties(this.state.searchTerm);\r\n  };\r\n\r\n  saveproperty = propertyId => {\r\n    // find property in this.state.propertiesList based on the propertyId value\r\n    const propertyPicked = this.state.propertiesList.find(property => property.propertyId === propertyId);\r\n    console.log(propertyPicked);\r\n    API.saveproperty(propertyPicked)\r\n      .then(res => {\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* make jumbotron */}\r\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-light\">\r\n          <div className=\"container-fluid\">\r\n            <h1>Search For properties Here</h1>\r\n          </div>\r\n        </div>\r\n        {/* create row with two columns */}\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {/* form section */}\r\n            <div className=\"col-12 col-sm-6 col-md-3\">\r\n              <h3>Search For A property</h3>\r\n              <form onSubmit={this.handleFormSubmit}>\r\n                <input\r\n                  name=\"searchTerm\"\r\n                  onChange={this.handleInputChange}\r\n                  placeholder=\"Enter property name here\"\r\n                  value={this.state.searchTerm}\r\n                  type=\"input\"\r\n                  className=\"form-control mb-3\"\r\n                />\r\n                <button className=\"btn btn-block btn-success\" onClick={this.handleFormSubmit}>\r\n                  Search for property.\r\n                </button>\r\n              </form>\r\n            </div>\r\n            {/* end form section */}\r\n            {/* begin property result section */}\r\n            <div className=\"col-12 col-sm-6 col-md-9\">\r\n              {!this.state.propertiesList.length ? (\r\n                <h2 className=\"text-center\">Search For a property</h2>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <h3>Search Results for: {this.state.searchTerm}</h3>\r\n                  <div className=\"row\">\r\n                    {this.state.propertiesList.map(property => {\r\n                      return (\r\n                        <div className=\"col-12 col-md-6\" key={property.propertyId}>\r\n                          <div className=\"card\">\r\n                            <img src={property.image} alt={property.title} className=\"card-img-top\" />\r\n                            <div className=\"card-body\">\r\n                              <h5 className=\"card-title\">{property.title}</h5>\r\n                              <p className=\"card-text\">Released: {property.date}</p>\r\n                              {property.authors ? <p className=\"card-text\">By: {property.authors.join(', ')}</p> : ''}\r\n                              <p className=\"card-text\">\r\n                                <strong>Description</strong>: {property.description}{' '}\r\n                              </p>\r\n\r\n                              <a\r\n                                href={property.link}\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                                className=\"btn btn-success btn-small\">\r\n                                See More.\r\n                              </a>\r\n                              <button onClick={() => this.saveproperty(property.propertyId)} className=\"btn btn-dark btn-small\">\r\n                                Save property.\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}