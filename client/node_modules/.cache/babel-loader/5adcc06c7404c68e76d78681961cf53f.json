{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gdmar\\\\Documents\\\\CodingBootcamp\\\\HWAssignments\\\\stayorgo\\\\client\\\\src\\\\components\\\\Signup\\\\Signup.js\";\nimport React from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\nclass Signup extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      validated: false,\n      password: \"\",\n      confirm: \"\"\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  handlePassword(event) {\n    event.preventDefault();\n    this.setState({\n      password: this.val()\n    });\n  }\n\n  handleConfirm(event) {\n    event.preventDefault();\n    this.setState({\n      confirm: this.val()\n    });\n  }\n\n  handleValidation(event) {\n    const form = event.current.target;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    ;\n    this.setState({\n      validated: true\n    });\n  }\n\n  render() {\n    const validated = this.state.validated;\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sign Up\")), React.createElement(Form, {\n      validated: validated,\n      onSubmit: event => this.handleValidation(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      required: true,\n      id: \"confirm\",\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(Form.Control, {\n      required: true,\n      id: \"confirm\",\n      type: \"password\",\n      placeholder: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password doesn't match.\")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:\\Users\\gdmar\\Documents\\CodingBootcamp\\HWAssignments\\stayorgo\\client\\src\\components\\Signup\\Signup.js"],"names":["React","Button","Modal","Form","Signup","Component","constructor","props","context","handleShow","bind","handleClose","state","show","validated","password","confirm","setState","handlePassword","event","preventDefault","val","handleConfirm","handleValidation","form","current","target","checkValidity","stopPropagation","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\n\nclass Signup extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      validated: false,\n      password: \"\",\n      confirm: \"\"\n    };\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  };\n\n  handlePassword(event) {\n    event.preventDefault();\n    this.setState({ password: this.val()})\n  };\n\n  handleConfirm(event) {\n    event.preventDefault();\n    this.setState({ confirm: this.val()})\n  };\n\n  handleValidation(event) {\n\n    const form = event.current.target;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    this.setState({validated: true})\n  };\n\n  render() {\n    const { validated } = this.state;\n    return (\n      <>\n        <Button variant=\"info\" onClick={this.handleShow}>\n          Sign Up\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign Up</Modal.Title>\n          </Modal.Header>\n            <Form \n              validated={validated} \n              onSubmit={event => this.handleValidation(event)}\n            >\n          <Modal.Body>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control \n                  required\n                  type=\"email\" \n                  placeholder=\"Enter email\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  required\n                  id=\"confirm\"\n                  type=\"password\" \n                  placeholder=\"password\" \n                />\n                <Form.Label>Confirm</Form.Label>\n                <Form.Control \n                  required\n                  id=\"confirm\"\n                  type=\"password\" \n                  placeholder=\"Confirm\" \n                />\n              </Form.Group>\n                <Form.Control.Feedback>Password doesn't match.</Form.Control.Feedback>\n\n          </Modal.Body>\n          <Modal.Footer>\n\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n\n          </Modal.Footer>\n            </Form>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}